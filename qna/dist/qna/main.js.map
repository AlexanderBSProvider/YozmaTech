{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/qna.service.ts","./src/app/enviroment.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { QnaService } from './qna.service';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'qna'\n  questions$: Observable<any>\n\n  form = new FormGroup({\n    question: new FormControl('', Validators.required),\n    answer: new FormControl('', Validators.required)\n  })\n  isBeingEdited = false\n\n  currentId: number\n\n  constructor(private qnaService: QnaService) {}\n  \n  ngOnInit(): void {\n    this.questions$ = this.qnaService.getAllQuestions('questions')\n  }\n\n  onSubmit(){\n    console.log('here')\n    if (!this.form.valid) return\n    this.questions$ = this.qnaService.addQuestion('addQuestion',this.form.value)\n  }\n\n  deleteQuestion(id: number) {\n    this.questions$ =  this.qnaService.deleteQuestion('deleteQuestion', id)\n  }\n\n  saveQuestion() {\n    if (!this.form.valid) return\n    const body = {\n      id: this.currentId,\n      newQuestion: this.form.controls['question'].value,\n      newAnswer: this.form.controls['answer'].value\n    }\n    this.qnaService.saveQuestion('updateQuestion', body).subscribe(() =>  {\n      this.questions$ = this.qnaService.getAllQuestions('questions')\n      this.isBeingEdited = false\n    })\n  }\n\n  editQuestion(id: number) {\n    this.qnaService.setIsBeingEdited('updateIsBeingEdited', {questionId: id, isBeingEdited: true})\n    .pipe(\n      switchMap((question) => { \n        console.log('question[0]',question)\n        return this.qnaService.getQuestion('question', id) \n      })\n    ).subscribe((res) => {\n      console.log(res)\n      if (!res[0]) return\n      const {question, answer, id} = res[0] as {question: string, answer: string, id: number}\n      this.form.controls['question'].patchValue(question)\n      this.form.controls['answer'].patchValue(answer)\n      this.isBeingEdited = true\n      this.currentId = id\n    })\n \n    \n\n    // this.qnaService.getQuestion('question', id).subscribe((res) => {\n    //   console.log(res)\n    //   const {question, answer} = res[0] as {question: string, answer: string}\n    //   this.form.controls['question'].patchValue(question)\n    //   this.form.controls['answer'].patchValue(answer)\n\n    // })\n\n  }\n\n  onCancel() {\n    this.form.controls['question'].patchValue('')\n    this.form.controls['answer'].patchValue('')\n    this.isBeingEdited = false\n  }\n}\n","<div class=\"container-sm\">\n  <h3 class=\"mb-5\">Welcome to our support management</h3>\n  <div class=\"row mb-5\">\n    <div class=\"col-12\">\n      <form [formGroup]=\"form\">\n        <div class=\"mb-3\">\n          <label for=\"exampleInputQ\" class=\"form-label\">Question</label>\n          <input \n            type=\"text\"\n            class=\"form-control\" \n            id=\"exampleInputQ\" \n            aria-describedby=\"qHelp\" \n            formControlName=\"question\"\n          >\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"exampleInputQ\" class=\"form-label\">Answer</label>\n          <textarea \n            class=\"form-control\" \n            id=\"exampleInputA\" \n            aria-describedby=\"aHelp\" \n            rows=\"3\"\n            formControlName=\"answer\"\n            ></textarea>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary me-2\" [disabled]=\"isBeingEdited\" (click)=\"onSubmit()\">Add</button>\n        <button class=\"btn btn-primary me-2\" (click)=\"saveQuestion()\">Save</button>\n        <button class=\"btn btn-warning\" (click)=\"onCancel()\">Cancel</button>\n        \n      </form>\n    </div>\n  </div>\n\n  <hr>\n\n  <ng-container *ngFor=\"let question of questions$ | async\">\n    <div class=\"row mb-5\" >\n      <div class=\"col-8\">\n        <ul class=\"list-group\">\n          <!-- <li class=\"list-group-item\"> -->\n            <!-- I'll be a question on the listI'll be a question on the listI'll be a question on the listI'll be a question on the listI'll be a question on the listI'll be a question on the listI'll be a question on the listI'll be a question on the listI'll be a question on the listI'll be a question on the listI'll be a question on the listI'll be a question on the list -->\n            <!-- Tip: Answer should be hidden - this section should work similar to Q&A -->\n          <!-- </li> -->\n          <li class=\"list-group-item\" >\n            {{ question.question }}\n          </li>\n        </ul>\n      </div>\n\n      <div class=\"col-4 d-flex align-items-center\">\n        <button type=\"button\" class=\"btn btn-secondary me-2 w-100 btn-wrap-text\" (click)=\"editQuestion(question['id'])\" [disabled]=\"isBeingEdited\">Edit</button>\n        <button type=\"button\" class=\"btn btn-danger w-100 btn-wrap-text\" (click)=\"deleteQuestion(question['id'])\" [disabled]=\"isBeingEdited\">Delete</button>\n      </div>\n\n    </div>\n  </ng-container>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport { environment } from \"./enviroment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QnaService {\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n    getQuestion(route: string, id: number ) {\r\n        return this.http.get(environment.url + route + '/' + id);\r\n    }\r\n\r\n\tgetAllQuestions(route: string) {\r\n\t\treturn this.http.get(environment.url + route);\r\n\t}\r\n\r\n\taddQuestion(route: string, body: { question: string, answer: string}) {\r\n\t\treturn this.http.post(environment.url + route, body);\r\n\t}\r\n\r\n    deleteQuestion(route: string, id: number) {\r\n\t\treturn this.http.delete(environment.url + route + '/' + id);\r\n\t}\r\n\r\n\tsaveQuestion(route: string, body: { newQuestion: string, newAnswer: string, id: number}) {\r\n\t\treturn this.http.patch(environment.url + route, body);\r\n\t}\r\n\r\n\tsetIsBeingEdited(route: string, body: {questionId: number, isBeingEdited: boolean} ) {\r\n\t\treturn this.http.patch(environment.url + route, body);\r\n\t}\r\n}\r\n","export const environment  = {\r\n\turl: 'http://localhost:8080/'\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}